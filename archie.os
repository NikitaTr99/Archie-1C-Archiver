
Перем параметрПутьКБД;
Перем параметрПутьКСохранениюАрхива;

Перем конфигКолличествоКопий;
Перем конфигТекущееКоличествоКопий;

Перем файлКонфигурации;

Процедура ПриНачалеРаботыСистемы()
	ИнициализироватьПеременные();
КонецПроцедуры

Процедура ИнициализироватьПеременные()

	файлКонфигурации = Новый Файл("arch.cfg");

	параметрПутьКБД = АргументыКоманднойСтроки[0];
	параметрПутьКСохранениюАрхива = АргументыКоманднойСтроки[1];
	
	конфигКолличествоКопий = ПолучитьЗначениеКонфигурацииПоКлючу("конфигКолличествоКопий");


КонецПроцедуры

//Принимает перменную типа Файл 
Процедура Архивировать(архивируемыйКаталог) 

	архив = Новый ЗаписьZipФайла(параметрПутьКСохранениюАрхива + "\" + архивируемыйКаталог.Имя + ".zip");

	архив.Добавить(архивируемыйКаталог.ПолноеИмя);

	архив.Записать();

КонецПроцедуры

Функция ПолучитьЗначениеКонфигурацииПоКлючу(ключ) 

	Если файлКонфигурации.Существует() Тогда
	
		прочитанныйТекст = Новый ЧтениеТекста(файлКонфигурации.ПолноеИмя, КодировкаТекста.UTF8);

		строкаТекстовогоФайла = "";
		значение = Неопределено;
		
		Пока строкаТекстовогоФайла <> Неопределено Цикл
			строкаТекстовогоФайла = ПрочитанныйТекст.ПрочитатьСтроку();
			
			Если Найти(строкаТекстовогоФайла, ключ) > 0 Тогда
				разложеннаяСтрока = РазложитьСтрокуНаПодстроки(строкаТекстовогоФайла, "=");
				значение = разложеннаяСтрока[1];
			КонецЕсли;

		КонецЦикла;

			прочитанныйТекст.Закрыть();
	КонецЕсли;

	Возврат значение;
	
КонецФункции
Функция РазложитьСтрокуНаПодстроки(ВходящаяСтрока, Разделитель)
						   
	МассивСтрок = Новый Массив();
	ВходящаяСтрока = СтрЗаменить(ВходящаяСтрока, Разделитель, Символы.ПС);
	
	Для ИндексСтроки = 1 По СтрЧислоСтрок(ВходящаяСтрока) Цикл
		Подстрока = СтрПолучитьСтроку(ВходящаяСтрока, ИндексСтроки);
		МассивСтрок.Добавить(Подстрока);
	КонецЦикла;
	
	Возврат МассивСтрок;

КонецФункции 





ПриНачалеРаботыСистемы();