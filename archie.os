Перем параметрПутьКБД;
Перем параметрПутьКСохранениюАрхива;
Перем конфигКолличествоКопий;
Перем файлКонфигурации;
Перем уровеньСжатия;
Перем часКритерий;


Процедура ПриНачалеРаботыСистемы()
	ИнициализироватьПеременные();
	ПроверитьБазыКАрхивации(параметрПутьКБД);
	Очистка();
КонецПроцедуры

Процедура ИнициализироватьПеременные()
	Счётчик = 0;
	Пока Счётчик < АргументыКоманднойСтроки.Количество() Цикл
		Аргумент = АргументыКоманднойСтроки[Счётчик];
		Если Найти(Аргумент, "-i") Тогда
			Счётчик = Счётчик + 1;
			параметрПутьКБД = Новый Файл(АргументыКоманднойСтроки[Счётчик]);
		ИначеЕсли Найти(Аргумент, "-o") Тогда
			Счётчик = Счётчик + 1;
			параметрПутьКСохранениюАрхива = Новый Файл(АргументыКоманднойСтроки[Счётчик]);
		ИначеЕсли Найти(Аргумент, "-c") Тогда
			Счётчик = Счётчик + 1;
			конфигКолличествоКопий = АргументыКоманднойСтроки[Счётчик];
		ИначеЕсли Найти(Аргумент, "-hr") Тогда
			Счётчик = Счётчик + 1;
			часКритерий = АргументыКоманднойСтроки[Счётчик];
		ИначеЕсли Найти(Аргумент, "-z") Тогда
			Счётчик = Счётчик + 1;
			уровеньСжатияСтрока = АргументыКоманднойСтроки[Счётчик];
		ИначеЕсли Найти(Аргумент, "-h") Тогда
			Счётчик = Счётчик + 1;
			Сообщить("archie.exe -i <значение> -o <значение> -c <значение> -hr <значение> -z [максимальный|минимальный|оптимальный]" + Символы.ПС +
			"	-i - Путь к папке с БД 1с." + Символы.ПС +
			"	-o - Путь к папке с архивами БД (Если такой нет, то будет создана)" + Символы.ПС +
			"	-c - Количество копий БД." + Символы.ПС +
			"	-hr - Количество часов с момента прошлого изменения БД для архивации." + Символы.ПС +
			"	-z - Уровень архивации (значения: [максимальный|минимальный|оптимальный])" + Символы.ПС + 
			"	-h - Справка.");
			ЗавершитьРаботу(0);
		КонецЕсли;
		Счётчик = Счётчик + 1;
	КонецЦикла;
	Если уровеньСжатияСтрока <> Неопределено И Нрег(уровеньСжатияСтрока) = "максимальный" Тогда
		уровеньСжатия = УровеньСжатияZIP.Максимальный;
	ИначеЕсли Нрег(уровеньСжатияСтрока) = "минимальный" Тогда
		уровеньСжатия = УровеньСжатияZIP.Минимальный;
	ИначеЕсли Нрег(уровеньСжатияСтрока) = "оптимальный" Тогда
		уровеньСжатия = УровеньСжатияZIP.Оптимальный;
	Иначе
		Сообщить("Неизвестный уровень сжатия. Выбран параметр по умолчанию - оптимальный");
		уровеньСжатия = УровеньСжатияZIP.Оптимальный;
	КонецЕсли;

КонецПроцедуры

Процедура ПроверитьБазыКАрхивации(входящийКаталог)
	маркерБд = НайтиФайлы(входящийКаталог.ПолноеИмя, "*.1cd");
	Если НЕ ЗначениеЗаполнено(маркерБд) Тогда
		папкиВходящегоКаталога = НайтиФайлы(входящийКаталог.ПолноеИмя, "*");
		Для каждого каталог Из папкиВходящегоКаталога Цикл
			Если каталог.ЭтоКаталог() Тогда
				ПроверитьБазыКАрхивации(каталог);
			КонецЕсли;
		КонецЦикла;
		Иначе
			ПроверитьУсловиеИАрхивировать(входящийКаталог);
	КонецЕсли;
КонецПроцедуры

Процедура ПроверитьУсловиеИАрхивировать(каталогБд)
    мВремяИзменения = каталогБд.ПолучитьВремяИзменения();
	мСекундыТаймаута = 60 * 60 * Число(часКритерий);
	мИзменениеСТаймаутом = мВремяИзменения + мСекундыТаймаута;
	Если ТекущаяДата() > мИзменениеСТаймаутом Тогда
		Архивировать(каталогБд)
	КонецЕсли;
КонецПроцедуры

//Принимает перменную типа Файл 
Процедура Архивировать(архивируемыйКаталог) 
	ДатаАрхивации = Формат(МестноеВремя(ТекущаяУниверсальнаяДата()), "ДФ=гггг.ММ.дд_ЧЧ-мм-сс");
	имяКаталогаИФайла = архивируемыйКаталог.Имя;
	контекстныйКаталогАрхивов = Новый Файл(параметрПутьКСохранениюАрхива.ПолноеИмя + "\" + имяКаталогаИФайла);
	Если НЕ контекстныйКаталогАрхивов.Существует() Тогда
		СоздатьКаталог(контекстныйКаталогАрхивов.ПолноеИмя);	
	КонецЕсли;
	уровеньСжатия = "Максимальный";
	архив = Новый ЗаписьZipФайла(контекстныйКаталогАрхивов.ПолноеИмя + "\" + имяКаталогаИФайла + "_" + ДатаАрхивации + ".zip", уровеньСжатия);
	архив.Добавить(архивируемыйКаталог.ПолноеИмя, РежимСохраненияПутейZIP.СохранятьОтносительныеПути, РежимОбработкиПодкаталоговZIP.ОбрабатыватьРекурсивно);
	архив.Записать();
КонецПроцедуры

Процедура Очистка()
	Если параметрПутьКСохранениюАрхива.Существует() Тогда
		МассивКаталогов = НайтиФайлы(параметрПутьКСохранениюАрхива.ПолноеИмя, "*");
		Для Каждого Каталог Из МассивКаталогов Цикл
			МассивАрхивов = НайтиФайлы(Каталог.ПолноеИмя, "*.zip");
			Если МассивАрхивов.Количество() > Число(конфигКолличествоКопий) Тогда
				количествоКУдалению = МассивАрхивов.Количество() - Число(конфигКолличествоКопий) - 1;
				Для Сч = 0 По количествоКУдалению Цикл
					архивКУдалению = МассивАрхивов.Получить(Сч);
					УдалитьФайлы(архивКУдалению.ПолноеИмя);
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Функция УбратьКовычкиВПути(ПутьСтрока)
	Возврат СтрЗаменить(ПутьСтрока, """", "");
КонецФункции

ПриНачалеРаботыСистемы();