
Перем параметрПутьКБД;
Перем параметрПутьКСохранениюАрхива;

Перем конфигКолличествоКопий;



Перем файлКонфигурации;

Процедура ПриНачалеРаботыСистемы()
	ИнициализироватьПеременные();
	Архивировать(параметрПутьКБД);
	Очистка();
КонецПроцедуры

Процедура ИнициализироватьПеременные()

	файлКонфигурации = Новый Файл("arch.cfg");

	параметрПутьКБД = Новый Файл(АргументыКоманднойСтроки[0]);
	параметрПутьКСохранениюАрхива = Новый Файл(АргументыКоманднойСтроки[1]);
	
	конфигКолличествоКопий = ПолучитьЗначениеКонфигурацииПоКлючу("конфигКолличествоКопий");

КонецПроцедуры

//Принимает перменную типа Файл 
Процедура Архивировать(архивируемыйКаталог) 

	ДатаАрхивации = Формат(МестноеВремя(ТекущаяУниверсальнаяДата()), "ДФ=дд.ММ.гггг-ЧЧммсс");

	имяКаталогаИФайла = архивируемыйКаталог.Имя;

	контекстныйКаталогАрхивов = Новый Файл(параметрПутьКСохранениюАрхива.ПолноеИмя + "\" + имяКаталогаИФайла);

	Если НЕ контекстныйКаталогАрхивов.Существует() Тогда
		СоздатьКаталог(контекстныйКаталогАрхивов.ПолноеИмя);	
	КонецЕсли;

	архив = Новый ЗаписьZipФайла(контекстныйКаталогАрхивов.ПолноеИмя + "\" + имяКаталогаИФайла + "_" + ДатаАрхивации + ".zip");

	архив.Добавить(архивируемыйКаталог.ПолноеИмя, РежимСохраненияПутейZIP.СохранятьОтносительныеПути, РежимОбработкиПодкаталоговZIP.ОбрабатыватьРекурсивно);

	архив.Записать();

КонецПроцедуры

Процедура Очистка()
	Если параметрПутьКСохранениюАрхива.Существует() Тогда
		
		МассивКаталогов = НайтиФайлы(параметрПутьКСохранениюАрхива.ПолноеИмя, "*");

		Для Каждого Каталог Из МассивКаталогов Цикл
			МассивАрхивов = НайтиФайлы(Каталог.ПолноеИмя, "*.zip");
			Если МассивАрхивов.Количество() > Число(конфигКолличествоКопий) Тогда
				количествоКУдалению = МассивАрхивов.Количество() - Число(конфигКолличествоКопий) - 1;
				Для Сч = 0 По количествоКУдалению Цикл
					архивКУдалению = МассивАрхивов.Получить(Сч);
					УдалитьФайлы(архивКУдалению.ПолноеИмя);
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьЗначениеКонфигурацииПоКлючу(ключ) 

	Если файлКонфигурации.Существует() Тогда
	
		прочитанныйТекст = Новый ЧтениеТекста(файлКонфигурации.ПолноеИмя, КодировкаТекста.UTF8);

		строкаТекстовогоФайла = "";
		значение = Неопределено;
		
		Пока строкаТекстовогоФайла <> Неопределено Цикл
			строкаТекстовогоФайла = ПрочитанныйТекст.ПрочитатьСтроку();
			
			Если Найти(строкаТекстовогоФайла, ключ) > 0 Тогда
				разложеннаяСтрока = РазложитьСтрокуНаПодстроки(строкаТекстовогоФайла, "=");
				значение = разложеннаяСтрока[1];
			КонецЕсли;

		КонецЦикла;

			прочитанныйТекст.Закрыть();
	КонецЕсли;

	Возврат значение;
	
КонецФункции
Функция РазложитьСтрокуНаПодстроки(ВходящаяСтрока, Разделитель)
						   
	МассивСтрок = Новый Массив();
	ВходящаяСтрока = СтрЗаменить(ВходящаяСтрока, Разделитель, Символы.ПС);
	
	Для ИндексСтроки = 1 По СтрЧислоСтрок(ВходящаяСтрока) Цикл
		Подстрока = СтрПолучитьСтроку(ВходящаяСтрока, ИндексСтроки);
		МассивСтрок.Добавить(Подстрока);
	КонецЦикла;
	
	Возврат МассивСтрок;

КонецФункции 





ПриНачалеРаботыСистемы();